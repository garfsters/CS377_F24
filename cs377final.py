# -*- coding: utf-8 -*-
"""CS377Final.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mESyfz5YimzmbY_CiPIJ8uixahOCOGKT
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import Lasso
from sklearn.linear_model import Ridge

"""# Importing the Dataset"""

houses = pd.read_csv('real_estate_dataset.csv')

# from google.colab import drive
# drive.mount('/content/drive')

houses = houses.drop(['ID'], axis=1)

houses

current_year = 2024
houses['Age'] = current_year - houses['Year_Built']

houses

"""# Separating Features"""

x = houses[['Square_Feet', 'Num_Bedrooms', 'Num_Bathrooms', 'Num_Floors', 'Age', 'Has_Garden', 'Has_Pool', 'Garage_Size']]
y = houses['Price']

"""# Creating OLS Model and Splitting Dataset"""

X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)
ols = LinearRegression()
ols.fit(X_train, y_train)

"""R-squared of OLS Model"""

ols.score(X_test, y_test)

"""# Lasso Time!!"""

lasso = Lasso(alpha=1.0)
lasso.fit(X_train, y_train)
X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.20, random_state=42)

lasso.score(X_test, y_test)

"""# Ridge Time!!!"""

ridge = Ridge(alpha=1.0) # You can adjust the alpha value
ridge.fit(X_train, y_train)

ridge_score = ridge.score(X_test, y_test)
print(f"Ridge Regression R-squared: {ridge_score}")

"""# Cost of your Dream Home"""

user_bedrooms = float(input('How many bedrooms do you want? '))
user_bathrooms = float(input('How many bathrooms do you want? '))
user_square_feet = float(input('How large do you want your home to be in sq. ft? '))
user_floors = float(input('How many floors do you want? '))
user_garden = float(input('Do you want a garden? '))
user_pool = float(input('Do you want a pool? '))
user_age = float(input('How old do you want the house to be? '))
user_garage = float(input('How large do you want the garage to be? '))

ols.predict([[user_square_feet, user_bedrooms, user_bathrooms, user_floors, user_age, user_garden, user_pool, user_garage]])

print(ols.coef_)
print(lasso.coef_)
ridge.coef_

print(f"OLS Intercept (beta-0): {ols.intercept_}")
print(f"Lasso Intercept (beta-0): {lasso.intercept_}")
print(f"Ridge Intercept (beta-0): {ridge.intercept_}")





plt.figure(figsize=(8, 6))
sns.scatterplot(x='Age', y='Price', data=houses)
plt.title('Scatter Plot of Age vs. Price')
plt.xlabel('Age of the House')
plt.ylabel('Price')
plt.show()

